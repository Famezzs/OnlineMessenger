@using System.Security.Claims
@inject IHttpContextAccessor HttpContextAccessor
@{
    string userId = User.FindFirstValue(ClaimTypes.NameIdentifier);

    string? chatName = HttpContextAccessor.HttpContext!.Session.GetString("ChatName");
}

@model List<MessageRepresentation>

<div class="context-menu">
    <div class="context-menu__editbtn" data-request-url="@Url.Action("SetMessageId","Chat")">Edit</div>
    <div class="context-menu__divider"></div>
    <div class="context-menu__delbtn" data-request-url="@Url.Action("DeleteMessageForSelf","Chat")">Delete for self</div>
    <div class="context-menu__delforevrbtn" data-request-url="@Url.Action("DeleteMessage","Chat")">Delete for everyone</div>
</div>

@if (!String.IsNullOrWhiteSpace(chatName))
{
    <div style="height: 100px">
        <h2 class="text-center">@chatName</h2>
    </div>
}

@using (Html.BeginForm("LoadNewMessages", "Chat"))
{
    <div class="centered-div">
        <input type="submit" value="Load older messages" title="Load older messages" onclick="saveScroll()" />
    </div>
}

@if (Model != null)
{
    <ul style="list-style-type: none">
        @foreach (var message in Model)
        {
            @if (message.Message.IsDeletedForSelf &&
           message.Message.OwnerId == userId)
            {
                continue;
            }

            @if (message.Message.OwnerId == userId)
            {
                <li class="message-item" oncontextmenu="configureContextMenu(event)" id="@message.Message.Id">

                    <b id="@message.Message.Id">@message.OwnerName (you)</b>
                    <b id="@message.Message.Id">@message.Message.Created</b>

                    @if (message.Message.IsEdited == true)
                    {
                        <b id="@message.Message.Id">(Edited)</b>
                    }

                    <p id="@message.Message.Id">
                        @message.Message.Contents
                    </p>

                    @if (message.ReplyTo != null)
                    {
                        <b id="@message.Message.Id">In reply to:</b>
                        <div class="message-item" id="@message.Message.Id">

                            <b id="@message.Message.Id">@message.ReplyTo.ReplyToMessageId</b>

                            <b id="@message.Message.Id">@message.ReplyTo.Created</b>

                            @if (message.ReplyTo.IsEdited == true)
                            {
                                <b id="@message.Message.Id">(Edited)</b>
                            }

                            <p id="@message.Message.Id">
                                @message.ReplyTo.Contents
                            </p>
                        </div>
                    }
                </li>
            }
            else
            {
                <li class="message-item">

                    <b>@message.OwnerName</b>
                    <b>@message.Message.Created</b>

                    @if (message.Message.IsEdited == true)
                    {
                        <b>(Edited)</b>
                    }

                    <p>
                        @message.Message.Contents
                    </p>

                    @if (message.ReplyTo != null)
                    {
                        <b id="@message.Message.Id">In reply to:</b>
                        <div class="message-item" id="@message.Message.Id">

                            <b id="@message.Message.Id">@message.ReplyTo.ReplyToMessageId</b>

                            <b id="@message.Message.Id">@message.ReplyTo.Created</b>

                            @if (message.ReplyTo.IsEdited == true)
                            {
                                <b id="@message.Message.Id">(Edited)</b>
                            }

                            <p id="@message.Message.Id">
                                @message.ReplyTo.Contents
                            </p>
                        </div>
                    }
                </li>
            }
        }
    </ul>
}

<div style="height: 150px; margin-bottom: 40px;"></div>

@using (Html.BeginForm("SendMessage", "Chat", FormMethod.Post))
{
    <div class="message-menu" id="message-menu">
        <textarea placeholder="Enter your message" value="@ViewData["Message"]" name="messageString"
              oninput='this.style.height = "";this.style.height = this.scrollHeight + "px"'></textarea>
        <span>
            <input type="submit" value="Send" title="Send" onclick="saveScroll()" />
            <button type="button" class="refresh-button" onclick="refreshMessages()">Refresh</button>
        </span>
    </div>
}

@using (Html.BeginForm("EditMessage", "Chat", FormMethod.Post))
{
    <div class="edit-message-menu" id="edit-message-menu">
        <textarea value="@ViewData["EditMessage"]" name="newContents" id="edit-message-input"
              oninput='this.style.height = "";this.style.height = this.scrollHeight + "px"'></textarea>
        <span>
            <input type="submit" value="Confirm" title="Confirm" onclick="saveScroll()" />
        </span>
    </div>
}

<script src="~/js/chat.js"></script>
